name: Build RTL8189ES Driver

on: [workflow_dispatch, pull_request]

jobs:
  fetchKernelData:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - id: set-matrix
      run: |
        JSON=$(curl -s https://www.kernel.org/releases.json)
        MATRIX=$(echo "$JSON" | jq -c '[.releases[] | select(.moniker != "linux-next") | .version][:1]')
        echo "matrix=$MATRIX" >> $GITHUB_OUTPUT

  build:
    needs: fetchKernelData
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version: ${{ fromJson(needs.fetchKernelData.outputs.matrix) }}
    steps:
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y build-essential wget curl kmod gcc make jq unzip \
          gcc-aarch64-linux-gnu linux-headers-generic

    - name: Download Ubuntu Kernel Headers
      env:
        VERSION: ${{ matrix.version }}
      run: |
        BASE=https://kernel.ubuntu.com/~kernel-ppa/mainline/v${VERSION}
        PAGE=$(wget -qO- $BASE/)
        DEB_ALL=$(echo "$PAGE" | grep -oP 'linux-headers-.*all.deb' | head -n1)
        DEB_AMD64=$(echo "$PAGE" | grep -oP 'linux-headers-.*amd64.deb' | head -n1)

        wget -q "$BASE/$DEB_ALL"
        wget -q "$BASE/$DEB_AMD64"
        sudo dpkg -i *.deb

        echo "KERNEL_SRC=/lib/modules/$(uname -r)/build" >> $GITHUB_ENV

    - name: Clone RTL8189ES Driver
      run: |
        git clone https://github.com/feryw/rtl8189ES_linux driver
        ls driver

    - name: Inject Minimal Makefile
      run: |
        cat <<'EOF' > driver/Makefile
        obj-m += 8189es.o
        KDIR ?= /lib/modules/$(shell uname -r)/build
        PWD := \$(shell pwd)
        all:
        	\$(MAKE) -C \$(KDIR) M=\$(PWD) modules
        clean:
        	\$(MAKE) -C \$(KDIR) M=\$(PWD) clean
        EOF

    - name: Compile Driver
      run: |
        cd driver
        make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- KDIR=$KERNEL_SRC
        mkdir -p ../output
        cp *.ko ../output/rtl8189es-${{ matrix.version }}.ko

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: rtl8189es-${{ matrix.version }}
        path: output/*.ko

    - name: Upload to GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: rtl8189es-${{ matrix.version }}
        files: output/*.ko
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
